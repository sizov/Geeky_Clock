package com.syzov.geekyClock;

import java.util.Calendar;

import android.app.Service;
import android.appwidget.AppWidgetManager;
import android.content.ComponentName;
import android.content.ContextWrapper;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.IBinder;
import android.view.View;
import android.widget.RemoteViews;
import android.widget.Toast;

import com.syzov.geekyClock.utils.ClockUtils;

public class WidgetUpdateService extends Service {
	
	@Override
	public void onCreate() {
		Toast.makeText(this, "Geeky Clock, WidgetUpdateService: onCreate", Toast.LENGTH_SHORT).show();
		super.onCreate();
	}
	
	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		Toast.makeText(this, "Geeky Clock, WidgetUpdateService: onStartCommand", Toast.LENGTH_SHORT).show();
		
		buidUpdate(this);
		
		return super.onStartCommand(intent, flags, startId);
	}

	private void buidUpdate(ContextWrapper context) {
		//retrieving array of widget IDs by class
		AppWidgetManager manager = AppWidgetManager.getInstance(context);
		ComponentName componentName = new ComponentName(context, GeekyClockReceiver.class);
		int[] widgetIDs = manager.getAppWidgetIds(componentName);
		
		//getting array of ON/OFF led by current time 
		boolean[][] ledsArray = ClockUtils.getLedsByTime(Calendar.getInstance());
		
		//getting remote views
		RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.geeky_clock_widget_layout);
		
		for(int widgetID:widgetIDs){
			updateOneWidget(context, widgetID, ledsArray, views);
		}
	}

	/** This method updates one widget.
	 * @param ledsArray 
	 * @param views */
	private void updateOneWidget(ContextWrapper context, int widgetID, boolean[][] ledsArray, RemoteViews views) {
		//getting proper led_on and led_off drawable from Shared Preferences
		SharedPreferences preferences = getSharedPreferences(ConfigurationActivity.PREFERENCES_NAME, 0);
		int ledOnResourceID = preferences.getInt(Integer.toString(widgetID)+ConfigurationActivity.LED_ON_RESOURCE_ID_KEY_MARKER, 0);
		int ledOffResourceID = preferences.getInt(Integer.toString(widgetID)+ConfigurationActivity.LED_OFF_RESOURCE_ID_KEY_MARKER, 0);
		boolean isLedOffElementVisible = preferences.getBoolean(Integer.toString(widgetID)+ConfigurationActivity.LED_OFF_VISIBILITY_KEY_MARKER, true);
		
		//iterating through led IDs and setting source by ON/OFF value
		String ledIdAsString;
		int ledId;
		for(int i = 0; i<ledsArray.length; i++){
			for(int j = 0; j<ledsArray[i].length; j++){
				ledIdAsString = "led_"+Integer.toString(i)+"_"+Integer.toString(j);
				ledId = getResources().getIdentifier(ledIdAsString, "id", "com.syzov.geekyClock");
				
				if(ledsArray[i][j]){
					views.setImageViewResource(ledId, ledOnResourceID);
					views.setViewVisibility(ledId, View.VISIBLE);
				}
				else{
					views.setImageViewResource(ledId, ledOffResourceID);
					//if inactive LEDs supposed to be invisible - hide them
					if(!isLedOffElementVisible){
						views.setViewVisibility(ledId, View.INVISIBLE);
					}
					else{
						views.setViewVisibility(ledId, View.VISIBLE);
					}
				}
			}
		}
				
		//updating one widget
		AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);
		appWidgetManager.updateAppWidget(widgetID, views);
	}

	public IBinder onBind(Intent arg0) {
		return null;
	}
	
	@Override
	public void onDestroy() {
		Toast.makeText(this, "Geeky Clock, WidgetUpdateService: onDestroy", Toast.LENGTH_SHORT).show();
		super.onDestroy();
	}
}
